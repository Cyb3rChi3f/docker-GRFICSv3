version: '3'
services:
  plc:
    image: plc:0.1
    build: ./plc_docker
    # ports:
    #   - 8083:8080
    networks:
      lan:
        ipv4_address: 192.168.95.2
  
  hmi:
    image: hmi:0.1
    build: ./hmi_docker
    # ports:
    #   - 8082:9090
    networks:
      lan:
        ipv4_address: 192.168.95.5
  
  simulation:
    image: simulation:0.1
    build: ./simulation_docker
    # ports:
    #   - 8081:80
    networks:
      lan:
        ipv4_address: 192.168.95.10

  simulation_feed2:
    image: simulation:0.1
    build: ./simulation_docker
    command: "python3 /src/remote_io/modbus/feed2.py"
    networks:
      lan:
        ipv4_address: 192.168.95.11
    restart: unless-stopped

  simulation_purge:
    image: simulation:0.1
    build: ./simulation_docker
    command: "python3 /src/remote_io/modbus/purge.py"
    networks:
      lan:
        ipv4_address: 192.168.95.12
    restart: unless-stopped

  simulation_product:
    image: simulation:0.1
    build: ./simulation_docker
    command: "python3 /src/remote_io/modbus/product.py"
    networks:
      lan:
        ipv4_address: 192.168.95.13
    restart: unless-stopped

  simulation_tank:
    image: simulation:0.1
    build: ./simulation_docker
    command: "python3 /src/remote_io/modbus/tank.py"
    networks:
      lan:
        ipv4_address: 192.168.95.14
    restart: unless-stopped

  simulation_analyzer:
    image: simulation:0.1
    build: ./simulation_docker
    command: "python3 /src/remote_io/modbus/analyzer.py"
    networks:
      lan:
        ipv4_address: 192.168.95.15
    restart: unless-stopped

  workstation:
    image: workstation:0.1
    build: ./workstation_docker
    # ports:
    #   - 5900:5900
    networks:
      lan:
        ipv4_address: 192.168.95.6

networks:
  lan:
    ipam:
      driver: default
      config:
        - subnet: "192.168.95.0/24"